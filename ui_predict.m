function ui_predict(net, word2idx, idx2word)
    % Create a figure with a modern, clean look
    screenSize = get(0, 'ScreenSize');
    figWidth = 480; figHeight = 330;
    f = figure('Name', 'Sentence Predictor', ...
        'Position', [ ...
            (screenSize(3)-figWidth)/2, ...
            (screenSize(4)-figHeight)/2, ...
            figWidth, figHeight], ...
        'Color', [0.97 0.97 1], ...
        'NumberTitle', 'off', ...
        'Resize', 'off');

    % Input background panel for grouping
    panel = uipanel('Parent', f, ...
        'Title', 'Input', ...
        'FontSize', 12, ...
        'Position', [0.05 0.60 0.90 0.36], ...
        'BackgroundColor', [0.93 0.95 1]);

    % Input prompts and edit fields
    uicontrol('Parent', panel, 'Style', 'text', ...
        'Position', [18 52 350 28], ...
        'String', 'Enter 3 context words:', ...
        'FontSize', 12, ...
        'FontWeight', 'bold', ...
        'BackgroundColor', get(panel, 'BackgroundColor'), ...
        'HorizontalAlignment', 'left');

    inputBox = uicontrol('Parent', panel, 'Style', 'edit', ...
        'Position', [20 28 390 28], ...
        'FontSize', 14, ...
        'BackgroundColor', [1 1 1], ...
        'TooltipString', 'E.g. the quick brown');

    uicontrol('Parent', panel, 'Style', 'text', ...
        'Position', [20 1 180 20], ...
        'String', 'Sentence Length (min 4):', ...
        'FontSize', 11, ...
        'BackgroundColor', get(panel, 'BackgroundColor'), ...
        'HorizontalAlignment', 'left');

    lenBox = uicontrol('Parent', panel, 'Style', 'edit', ...
        'Position', [200 2 60 22], ...
        'String', '7', ...
        'FontSize', 13, ...
        'BackgroundColor', [1 1 1], ...
        'TooltipString', 'Sentence length (>=4)');

    % Predict button outside panel
    predictBtn = uicontrol('Style', 'pushbutton', ...
        'String', 'Predict Sentence', ...
        'Position', [figWidth/2-70 figHeight*0.45 140 40], ...
        'FontSize', 14, ...
        'FontWeight', 'bold', ...
        'BackgroundColor', [0.8 0.88 1], ...
        'ForegroundColor', [0 0.2 0.6]);

    % Results area with drop shadow
    resultPanel = uipanel('Parent', f, 'Title', 'Prediction', ...
        'Position', [0.05 0.03 0.90 0.38], ...
        'BackgroundColor', [0.96 0.98 1], ...
        'FontSize', 12);

    resultLabel = uicontrol('Parent', resultPanel, ...
        'Style', 'edit', ...
        'Position', [10 18 figWidth*0.85 60], ...
        'FontSize', 14, ...
        'ForegroundColor', [0.08 0.4 0.14], ...
        'BackgroundColor', [1 1 1], ...
        'Max', 2, 'Min', 0, ... % multiline
        'HorizontalAlignment', 'left', ...
        'Enable', 'inactive', ...
        'FontWeight', 'bold');

    % Callback for prediction button
    predictBtn.Callback = @(src, event) predictCallback();

    function predictCallback()
        inputText = strtrim(inputBox.String);
        words = split(lower(inputText));
        if numel(words) ~= 3
            resultLabel.String = '❌ Please enter exactly 3 words.';
            resultLabel.ForegroundColor = [0.7 0 0];
            return;
        end
        numWords = str2double(lenBox.String);
        if isnan(numWords) || numWords < 4 || mod(numWords,1)~=0
            resultLabel.String = '❌ Please enter a valid sentence length (integer ≥ 4).';
            resultLabel.ForegroundColor = [0.7 0 0];
            return;
        end
        try
            sentence = predict_sentence(net, words, word2idx, idx2word, numWords);
            resultLabel.String = ['✅ ' sentence];
            resultLabel.ForegroundColor = [0.08 0.4 0.14]; % green for success
        catch e
            resultLabel.String = '❌ Prediction failed. Check input.';
            resultLabel.ForegroundColor = [0.7 0 0];
            fprintf('Error: %s\n', e.message);
        end
    end
end